{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador do Microsoft (R) Visual C#",
        "version": "4.10.0.0",
        "fileVersion": "4.10.0-3.24216.12 (3af0081a)",
        "semanticVersion": "4.10.0",
        "language": "pt-BR"
      },
      "results": [
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "O tipo de valor de nulidade pode ser nulo.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Factory/PublicHolidayFactory.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "O tipo de valor de nulidade pode ser nulo.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Factory/PublicHolidayFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 48,
                  "endLine": 15,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "O tipo de valor de nulidade pode ser nulo.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Factory/PublicHolidayFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 65,
                  "endLine": 15,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "O tipo de valor de nulidade pode ser nulo.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Factory/PublicHolidayFactory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 78,
                  "endLine": 15,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1694",
          "level": "warning",
          "message": "Convert this 'abstract' class to an interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Abstraction/PublicHolidayRule.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 23,
                  "endLine": 6,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6562",
          "level": "warning",
          "message": "Provide the \"DateTimeKind\" when creating this object.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Models/FloatingHolidayRule.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 36,
                  "endLine": 27,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetWeekOccurrence' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Models/FloatingHolidayRule.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "O membro 'GetWeekOccurrence' não acessa os dados da instância e pode ser marcado como estático",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/DesignCrowd/DesignCrowd.Data/Models/FloatingHolidayRule.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Marcar membros como estáticos",
          "fullDescription": "Os membros que não acessam os dados da instância nem chamam os métodos da instância podem ser marcados como estáticos. Depois que você marcar os métodos como estáticos, o compilador emitirá os sites de chamada não virtuais para esses membros. Isso pode oferecer um ganho de desempenho mensurável para códigos sensíveis ao desempenho.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8629": {
          "id": "CS8629",
          "shortDescription": "O tipo de valor de nulidade pode ser nulo.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8629)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1694": {
          "id": "S1694",
          "shortDescription": "An abstract class should have both abstract and concrete methods",
          "fullDescription": "A class with only abstract methods and no inheritable behavior should be converted to an interface.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1694",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6562": {
          "id": "S6562",
          "shortDescription": "Always set the \"DateTimeKind\" when creating new \"DateTime\" instances",
          "fullDescription": "Not knowing the Kind of the DateTime object that an application is using can lead to misunderstandings when displaying or comparing them. Explicitly setting the Kind property helps the application to stay consistent, and its maintainers understand what kind of date is being managed. To achieve this, when instantiating a new DateTime object you should always use a constructor overload that allows you to define the Kind property.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6562",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}